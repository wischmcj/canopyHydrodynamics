
version: 1
disable_existing_loggers: False

formatters:
    simple:
        format: "%(asctime)s.%(msecs)03d | %(message)s"
        datefmt: "%H:%M:%S"

    comprehensive:
        format: "%(asctime)s.%(msecs)03d |%(threadName)-12s | %(levelname)-7s | %(filename)s:%(lineno)s - %(funcName)20s() | %(name)s - %(message)s"
        datefmt: "%Y.%m.%d %H:%M:%S"

handlers:

    # The handlers we define here will output all logs they receive by default
    # but we include the `level` so it can be overridden by environment

    # console:
    #     level: 0
    #     class: log.handlers.ConsoleHandler
    #     # class: logging.StreamHandler
    #     formatter: debug
    #     styles:
    #         log.web_url: bright_blue
    #         log.local_url: bright_blue

    #         log.info_level: cyan
    #         log.warning_level: yellow3
    #         log.error_level: red3
    #         log.critical_level: bright_red

    #         log.completed_state: green
    #         log.cancelled_state: yellow3
    #         log.failed_state: red3
    #         log.crashed_state: bright_red

    #         log.flow_run_name: magenta
    #         log.flow_name: bold magenta

    # api:
    #     level: 0
    #     class: prefect.logging.handlers.APILogHandler

    
    comprehensive:
        level: 0
        class: logging.StreamHandler
        formatter: comprehensive

    file:
        level: 1
        class: logging.FileHandler
        filename: ./log/canhydro.log
        formatter: comprehensive

loggers:

    test:
        level: DEBUG
        handlers: [comprehensive]
        propagate: no

    my-logger:
        level: INFO
        handlers: [comprehensive, file]
        propagate: yes

    # prefect:
    #     level: "${PREFECT_LOGGING_LEVEL}"

    # prefect.extra:
    #     level: "${PREFECT_LOGGING_LEVEL}"
    #     handlers: [api]

    # prefect.flow_runs:
    #     level: NOTSET
    #     handlers: [api]

    # prefect.task_runs:
    #     level: NOTSET
    #     handlers: [api]

    # prefect.server:
    #     level: "${PREFECT_LOGGING_SERVER_LEVEL}"

    # prefect.client:
    #     level: "${PREFECT_LOGGING_LEVEL}"

    # prefect.infrastructure:
    #     level: "${PREFECT_LOGGING_LEVEL}"

    # prefect._internal:
    #     level: "${PREFECT_LOGGING_INTERNAL_LEVEL}"
    #     propagate: false
    #     handlers: [debug]

    # uvicorn:
    #     level: "${PREFECT_LOGGING_SERVER_LEVEL}"

    # fastapi:
    #     level: "${PREFECT_LOGGING_SERVER_LEVEL}"

# The root logger: any logger without propagation disabled sends to here as well
# root:
#     # By default, we display warning level logs from any library in the console
#     # to match Python's default behavior while formatting logs nicely
#     level: WARNING
#     handlers: [debug]
