
[qsm]
# type=0
cyl_id=1
parent_id=2
x=[3,6]
y=[4,7]
z=[5,8]
radius=9
volume=10
# growth_volume=11
length=12
# growth_length=13
# fitting_type=14
segment_id=15
# parent_segment_id=16
# segment_median_radius=17
# segment_growth_volume=18
# segment_growth_length=19
branch_order=20
reverse_branch_order=21
# reverse_pipe_radius_branch_order=22
# reverse_pipe_area_branch_order=23
branch_id=24
# tree_id=25
# tree_species=26
# translate_xyz=[27,28,29]
# gv= [30,31,32]
# gl= [33,34]

[config_vars]
min_len_drip_flow = 2
in_flow_grade_lim = -0.16666
[project.optional-dependencies]
test = [
    "black==23.3.0",
    "check-manifest==0.49",
    "pre-commit==3.3.1",
    "pylint==2.17.4",
    "pylint_junit",
    "pytest-cov==4.0.0",
    "pytest-mock<3.10.1",
    "pytest-runner",
    "pytest==7.3.1",
    "pytest-github-actions-annotate-failures",
    "shellcheck-py==0.9.0.2",
]

[project.urls]
Documentation = "https://github.com/wischmcj/canopyHydrodynamics/blob/main/README.md"
Source = "https://github.com/wischmcj/canopyHydrodynamics/"


[directories]
root_dir = "./"
input_dir = "./data/input/"
output_dir = "./data/output_dir/"
test_input_dir = "./data/test/"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

[project]
requires-python = ">=3.10"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.pytest.ini_options]
addopts = [
    "--import-mode=importlib",
]



[tool.coverage.run]
branch = true

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_also = [
    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self\\.debug",
    "local_run",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",

    # Don't complain about abstract methods, they aren't run:
    "@(abc\\.)?abstractmethod",

    # Don't complain about code written for code evaluation purposes
    'if __name__ == "__main__"',

    # Don't complain about code retained for demonstration purpouses
    "class AlternativeCylCollection()",
    ]

ignore_errors = true

[tool.coverage.html]
directory = "coverage_html_report"


[output_statistics]
flow_cols = ["num_cylinders","projected_area","surface_area","angle_sum","volume","sa_to_vol","drip_node_id","drip_node_loc",'timestamp']
stats_cols = ["total_psa","psa_w_overlap","stem_psa","stem_psa_w_overlap","tot_surface_area","stem_surface_area","tot_hull_area","tot_hull_boundary","stem_hull_area","stem_hull_boundary","num_drip_points","max_bo","topQuarterTotPsa","topHalfTotPsa","topThreeQuarterTotPsa","TotalShade","top_quarter_shade","top_half_shade","top_three_quarter_shade","DBH","volume","X_max","Y_max","Z_max","X_min","Y_min","Z_min","Order_zero_angle_avg","Order_zero_angle_std","Order_one_angle_avg","Order_one_angle_std","Order_two_angle_avg","Order_two_angle_std","Order_three_angle_avg","Order_three_angle_std","order_gr_four_angle_avg","order_gr_four_angle_std","file_name","timestamp"]